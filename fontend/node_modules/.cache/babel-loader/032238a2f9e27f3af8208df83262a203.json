{"ast":null,"code":"export const getHandles = url => {\n  const urlArray = url;\n  let handles = [];\n  let handle1 = \"\",\n      handle2 = \"\";\n  let i = urlArray.length - 1;\n\n  while (urlArray[i] !== \"&\") {\n    handle2 = handle2 + urlArray[i];\n    i--;\n  }\n\n  i--;\n\n  while (urlArray[i] !== \"/\") {\n    handle1 = handle1 + urlArray[i];\n    i--;\n  }\n\n  const reverse = str => {\n    let revStr = \"\";\n\n    for (var j = str.length - 1; j >= 0; --j) {\n      revStr = revStr + str[j];\n    }\n\n    return revStr;\n  };\n\n  handles.push(reverse(handle1));\n  handles.push(reverse(handle2));\n  return handles;\n};","map":{"version":3,"sources":["/home/shivansh/Desktop/React-Practice/cf-explorer/fontend/src/components/util.js"],"names":["getHandles","url","urlArray","handles","handle1","handle2","i","length","reverse","str","revStr","j","push"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAIC,GAAD,IAAS;AACjC,QAAMC,QAAQ,GAAGD,GAAjB;AACA,MAAIE,OAAO,GAAG,EAAd;AAEA,MAAIC,OAAO,GAAG,EAAd;AAAA,MACEC,OAAO,GAAG,EADZ;AAEA,MAAIC,CAAC,GAAGJ,QAAQ,CAACK,MAAT,GAAkB,CAA1B;;AAEA,SAAOL,QAAQ,CAACI,CAAD,CAAR,KAAgB,GAAvB,EAA4B;AAC1BD,IAAAA,OAAO,GAAGA,OAAO,GAAGH,QAAQ,CAACI,CAAD,CAA5B;AACAA,IAAAA,CAAC;AACF;;AACDA,EAAAA,CAAC;;AAED,SAAOJ,QAAQ,CAACI,CAAD,CAAR,KAAgB,GAAvB,EAA4B;AAC1BF,IAAAA,OAAO,GAAGA,OAAO,GAAGF,QAAQ,CAACI,CAAD,CAA5B;AACAA,IAAAA,CAAC;AACF;;AAED,QAAME,OAAO,GAAIC,GAAD,IAAS;AACvB,QAAIC,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIC,CAAC,GAAGF,GAAG,CAACF,MAAJ,GAAa,CAA1B,EAA6BI,CAAC,IAAI,CAAlC,EAAqC,EAAEA,CAAvC,EAA0C;AACxCD,MAAAA,MAAM,GAAGA,MAAM,GAAGD,GAAG,CAACE,CAAD,CAArB;AACD;;AACD,WAAOD,MAAP;AACD,GAND;;AAQAP,EAAAA,OAAO,CAACS,IAAR,CAAaJ,OAAO,CAACJ,OAAD,CAApB;AACAD,EAAAA,OAAO,CAACS,IAAR,CAAaJ,OAAO,CAACH,OAAD,CAApB;AAEA,SAAOF,OAAP;AACD,CA/BM","sourcesContent":["export const getHandles = (url) => {\n  const urlArray = url;\n  let handles = [];\n\n  let handle1 = \"\",\n    handle2 = \"\";\n  let i = urlArray.length - 1;\n\n  while (urlArray[i] !== \"&\") {\n    handle2 = handle2 + urlArray[i];\n    i--;\n  }\n  i--;\n\n  while (urlArray[i] !== \"/\") {\n    handle1 = handle1 + urlArray[i];\n    i--;\n  }\n\n  const reverse = (str) => {\n    let revStr = \"\";\n    for (var j = str.length - 1; j >= 0; --j) {\n      revStr = revStr + str[j];\n    }\n    return revStr;\n  };\n\n  handles.push(reverse(handle1));\n  handles.push(reverse(handle2));\n\n  return handles;\n};\n"]},"metadata":{},"sourceType":"module"}