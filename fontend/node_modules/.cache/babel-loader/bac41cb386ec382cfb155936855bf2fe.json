{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/shivansh/Desktop/React-Practice/cf-explorer/src/components/TopProg.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport \"./TopProg.css\";\nimport { Typography, CardMedia } from \"@material-ui/core\";\nimport axios from \"./axios\";\nimport topProgs from \"./data\";\n\nfunction TopProg() {\n  _s();\n\n  const [Prog, setProg] = useState({\n    image: null,\n    name: null\n  });\n\n  async function fetchData(person) {\n    const time = new Date().getTime();\n    const key = \"ce72ebe1d56ebe106c52288686ac4c30c4539f07\";\n    const SecKey = \"e4b23d29ca62a1d0adcf1c234120681bc2bd6941\";\n    const url = \"https://codeforces.com/api/user.info?handles=\" + person.handle + \"&&apikey=\" + key + \"&time=\" + time + \"&apiSig=123456\" + \"sha512Hex(123456/user.info?handles=\" + person.handle + \"&apikey=\" + key + \"&time=\" + time + \"#\" + SecKey + \")\";\n    return await fetch(url).then(res => res.json()).then(data => data.result);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"topProgs\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Top Competitive Programmers around the globe!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topProgs_cards\",\n      children: topProgs.map(person => {\n        fetchData(person).then(result => {\n          setProg({\n            image: result[0].titlePhoto,\n            name: {\n              fname: result[0].firstName,\n              lname: result[0].lastName\n            }\n          });\n        }).catch(err => console.log(err));\n        console.log(Prog);\n        return /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              style: {\n                height: \"110px\",\n                width: \"220px\",\n                paddingTop: \"56.25%\"\n              },\n              image: Prog.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textPrimary\",\n              children: [Prog.name.fname, \" \", \"\", \" \", Prog.name.lname]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TopProg, \"4GZsOUmuKi/BqQ7B3g4hKW9n5oE=\");\n\n_c = TopProg;\nexport default TopProg; // key 59209f7957feb555eb912de371480597ecd890b4\n// secret a8df7b4bbcf8a602b9503d8faeae9216992156ce\n\nvar _c;\n\n$RefreshReg$(_c, \"TopProg\");","map":{"version":3,"sources":["/home/shivansh/Desktop/React-Practice/cf-explorer/src/components/TopProg.js"],"names":["React","useEffect","useState","Card","CardActions","CardContent","Typography","CardMedia","axios","topProgs","TopProg","Prog","setProg","image","name","fetchData","person","time","Date","getTime","key","SecKey","url","handle","fetch","then","res","json","data","result","map","titlePhoto","fname","firstName","lname","lastName","catch","err","console","log","height","width","paddingTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport \"./TopProg.css\";\nimport { Typography, CardMedia } from \"@material-ui/core\";\nimport axios from \"./axios\";\nimport topProgs from \"./data\";\n\nfunction TopProg() {\n  const [Prog, setProg] = useState({\n    image: null,\n    name: null,\n  });\n\n  async function fetchData(person) {\n    const time = new Date().getTime();\n    const key = \"ce72ebe1d56ebe106c52288686ac4c30c4539f07\";\n    const SecKey = \"e4b23d29ca62a1d0adcf1c234120681bc2bd6941\";\n    const url =\n      \"https://codeforces.com/api/user.info?handles=\" +\n      person.handle +\n      \"&&apikey=\" +\n      key +\n      \"&time=\" +\n      time +\n      \"&apiSig=123456\" +\n      \"sha512Hex(123456/user.info?handles=\" +\n      person.handle +\n      \"&apikey=\" +\n      key +\n      \"&time=\" +\n      time +\n      \"#\" +\n      SecKey +\n      \")\";\n\n    return await fetch(url)\n      .then((res) => res.json())\n      .then((data) => data.result);\n  }\n\n  return (\n    <div className=\"topProgs\">\n      <h1>Top Competitive Programmers around the globe!</h1>\n      <div className=\"topProgs_cards\">\n        {topProgs.map((person) => {\n          fetchData(person)\n            .then((result) => {\n              setProg({\n                image: result[0].titlePhoto,\n                name: {\n                  fname: result[0].firstName,\n                  lname: result[0].lastName,\n                },\n              });\n            })\n            .catch((err) => console.log(err));\n          console.log(Prog);\n          return (\n            <Card>\n              <CardContent>\n                <CardMedia\n                  style={{\n                    height: \"110px\",\n                    width: \"220px\",\n                    paddingTop: \"56.25%\",\n                  }}\n                  image={Prog.image}\n                />\n                <Typography color=\"textPrimary\">\n                  {Prog.name.fname} {\"\"} {Prog.name.lname}\n                </Typography>\n              </CardContent>\n            </Card>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default TopProg;\n\n// key 59209f7957feb555eb912de371480597ecd890b4\n\n// secret a8df7b4bbcf8a602b9503d8faeae9216992156ce\n"]},"metadata":{},"sourceType":"module"}