{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/shivansh/Desktop/React-Practice/cf-explorer/src/components/TopProg.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport \"./TopProg.css\";\nimport { Typography, CardMedia } from \"@material-ui/core\";\nimport topProgs from \"./data\";\n\nfunction TopProg() {\n  _s();\n\n  const [Info, setInfo] = useState([]);\n  const [change, setchange] = useState(0);\n  useEffect(() => {\n    async function fetchData(person) {\n      const time = new Date().getTime();\n      const key = \"ce72ebe1d56ebe106c52288686ac4c30c4539f07\";\n      const SecKey = \"e4b23d29ca62a1d0adcf1c234120681bc2bd6941\";\n      const url = \"https://codeforces.com/api/user.info?handles=\" + person.handle + \"&&apikey=\" + key + \"&time=\" + time + \"&apiSig=123456\" + \"sha512Hex(123456/user.info?handles=\" + person.handle + \"&apikey=\" + key + \"&time=\" + time + \"#\" + SecKey + \")\";\n      await fetch(url).then(res => res.json()).then(data => {\n        Info.push({\n          image: data.result[0].titlePhoto,\n          name: {\n            fname: data.result[0].firstName,\n            lname: data.result[0].lastName\n          }\n        });\n      }).catch(err => console.log(err));\n    }\n\n    topProgs.forEach(person => {\n      fetchData(person);\n      setchange(1);\n    });\n  }, [change]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"topProgs\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Top Competitive Programmers around the globe!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topProgs_cards\",\n      children: Info.length > 0 && Info.map(person => /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            style: {\n              height: \"110px\",\n              width: \"220px\",\n              paddingTop: \"56.25%\"\n            },\n            image: person.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textPrimary\",\n            children: [person.name.fname, \" \", \"\", \" \", person.name.lname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TopProg, \"CpvxmLO19iEgKnBeA9uo9xPwkRs=\");\n\n_c = TopProg;\nexport default TopProg;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopProg\");","map":{"version":3,"sources":["/home/shivansh/Desktop/React-Practice/cf-explorer/src/components/TopProg.js"],"names":["React","useEffect","useState","Card","CardContent","Typography","CardMedia","topProgs","TopProg","Info","setInfo","change","setchange","fetchData","person","time","Date","getTime","key","SecKey","url","handle","fetch","then","res","json","data","push","image","result","titlePhoto","name","fname","firstName","lname","lastName","catch","err","console","log","forEach","length","map","height","width","paddingTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport \"./TopProg.css\";\nimport { Typography, CardMedia } from \"@material-ui/core\";\nimport topProgs from \"./data\";\n\nfunction TopProg() {\n  const [Info, setInfo] = useState([]);\n  const [change, setchange] = useState(0);\n\n  useEffect(() => {\n    async function fetchData(person) {\n      const time = new Date().getTime();\n      const key = \"ce72ebe1d56ebe106c52288686ac4c30c4539f07\";\n      const SecKey = \"e4b23d29ca62a1d0adcf1c234120681bc2bd6941\";\n      const url =\n        \"https://codeforces.com/api/user.info?handles=\" +\n        person.handle +\n        \"&&apikey=\" +\n        key +\n        \"&time=\" +\n        time +\n        \"&apiSig=123456\" +\n        \"sha512Hex(123456/user.info?handles=\" +\n        person.handle +\n        \"&apikey=\" +\n        key +\n        \"&time=\" +\n        time +\n        \"#\" +\n        SecKey +\n        \")\";\n\n      await fetch(url)\n        .then((res) => res.json())\n        .then((data) => {\n          Info.push({\n            image: data.result[0].titlePhoto,\n            name: {\n              fname: data.result[0].firstName,\n              lname: data.result[0].lastName,\n            },\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n    topProgs.forEach((person) => {\n      fetchData(person);\n      setchange(1);\n    });\n  }, [change]);\n\n  return (\n    <div className=\"topProgs\">\n      <h1>Top Competitive Programmers around the globe!</h1>\n      <div className=\"topProgs_cards\">\n        {Info.length > 0 &&\n          Info.map((person) => (\n            <Card>\n              <CardContent>\n                <CardMedia\n                  style={{\n                    height: \"110px\",\n                    width: \"220px\",\n                    paddingTop: \"56.25%\",\n                  }}\n                  image={person.image}\n                />\n                <Typography color=\"textPrimary\">\n                  {person.name.fname} {\"\"} {person.name.lname}\n                </Typography>\n              </CardContent>\n            </Card>\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default TopProg;\n"]},"metadata":{},"sourceType":"module"}